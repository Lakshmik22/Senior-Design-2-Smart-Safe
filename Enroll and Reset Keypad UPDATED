#include <Arduino.h>
#include <Keypad.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <EEPROM.h>
#include <Adafruit_Fingerprint.h>
#include <HardwareSerial.h>
#include <WiFi.h>
#include <WebServer.h>
#include <NetworkClient.h>
#include <ESP_Mail_Client.h>

// OLED Definitions
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

#define EEPROM_SIZE_PASS 10  // EEPROM size for storing passcode
#define PASSCODE_LENGTH 6

// Keypad Definitions
#define ROWS 4
#define COLS 4

// LED pins
#define PIN_RED 2
#define PIN_GREEN 4
#define PIN_BLUE 13

//EEPROM Parameters
#define EMAIL_LENGTH_BYTE 0
#define EMAIL_START_BYTE 1

//Relay pin
#define RELAY_PIN 23

//Motion Sensor Code
const int trigPin = 5;
const int echoPin = 35;

bool shouldReportDistance = true;
long timeOfNextMotionTrigger = 0;
#define MOTION_REPORT_DELAY 1000 * 60 * 5

//define sound speed in cm/uS
#define SOUND_SPEED 0.034
#define CM_TO_INCH 0.393701

//door sensor
#define DOOR_SENSOR_PIN 12
long DOOR_OPEN_ALARM_TIMEOUT = 30000;
bool isDoorOpen = false;
long doorOpenTime = 0;
bool shouldSendEmail = true;
bool safeIsUnlocked = false;

long duration;
float distanceCm;
float distanceInch;
 
const char* ssid = "everglades_Guest"; // Change as needed
const char* password = "Dell2074"; // Change as needed

#define SMTP_server "smtp.gmail.com"
#define SMTP_Port 465

#define sender_email "smartsafesd1@gmail.com"
#define sender_password "owtibadqkzdoakpo"

#define Recipient_email "nick.brandenburg1228@gmail.com"
#define Recipient_name "Smart Safe User"

// Buzzer Pin
const int buzzerPin = 15;

bool enrollFinger = false;
bool resetPasscode = false;
bool mastercodeReset = false;
bool mastercodeEnroll = false;

int inputIndex = 0;

HardwareSerial mySerial(1);
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);

int fingerID = 0; // Variable to store entered fingerprint ID

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

bool inLockdownMode = false;
unsigned long int disableUntil = 0;
const unsigned long disableDuration = 15000;

char keyMap[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

uint8_t rowPins[ROWS] = {33, 32, 18, 19}; // GPIO pins for keypad rows
uint8_t colPins[COLS] = {14, 27, 26, 25}; // GPIO pins for keypad columns

Keypad keypad = Keypad(makeKeymap(keyMap), rowPins, colPins, ROWS, COLS);

// Code Variables
char masterCode[6] = {'1', '0', '1', '0', '1', '0'};
char enteredCode[6] = {' ', ' ', ' ', ' ', ' ', ' '};
char correctCode[6] = {'1', '2', '3', '4', '5', '6'};
int attempts = 0;

SMTPSession smtp;

WebServer server(80);
Session_Config config;

/////////////////////////////////////////////////////////////////////////////////////////////////////

// SETUP
void setup() {
  // Initialize Serial Communication
  Serial.begin(9600);

  // Set the data rate for the sensor serial port
  mySerial.begin(57600, SERIAL_8N1, 17, 16);

  finger.begin(57600);

  if (finger.verifyPassword()) {
    Serial.println("Fingerprint Sensor Connected");
  } else {
    Serial.println("Unable to find Sensor\nCheck Connections");
  }

  //EEPROM for passcode
  EEPROM.begin(EEPROM_SIZE_PASS);
  loadPasscode();

  // Initialize Pins
  pinMode(PIN_RED, OUTPUT);
  pinMode(PIN_GREEN, OUTPUT);
  pinMode(PIN_BLUE, OUTPUT);
  pinMode(buzzerPin, OUTPUT);
  pinMode(RELAY_PIN, OUTPUT);

  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input

  pinMode(DOOR_SENSOR_PIN, INPUT_PULLUP); //door sensor

  // Initialize I2C (Ensure correct pins are used)
  Wire.begin(21, 22);  // Default I2C pins for ESP32 (modify if needed)
  delay(100);          // Allow time for I2C to stabilize

  // Initialize OLED display
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Check OLED I2C address (default 0x3C)
    Serial.println("SSD1306 allocation failed");
    for (;;); // Halt the program if the display doesn't initialize
  }

  //clear display and setup display settings
  homeScreenDisplay();

  //ensure lock is locked
  energizeLock();
}

///////////////////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////////////////

void loop() {

  if (inLockdownMode && millis() < disableUntil) {
      fingerprintEntry(); // Do nothing while keypad is disabled
    }
      if (millis() == disableUntil) {
        inLockdownMode = false;
        homeScreenDisplay();
      }

      if (inLockdownMode == false && keypad.getKeys()) {
        for (int i = 0; i < LIST_MAX; i++) {
          if (keypad.key[i].stateChanged) { // Only find keys that have changed state
            switch (keypad.key[i].kstate) { // Check active key state
              case PRESSED:
              analogWrite(buzzerPin, 100);
              delay(200);
              analogWrite(buzzerPin, 0);
                switch (keypad.key[i].kchar) {
                  case '*': // Reset
                    resetCode();
                    updateOLEDDisplay();
                    break;

                  case '#': // Check code
                    checkEnteredCode();
                    break;

                  case 'A': //Enroll fingerprint
                  mastercodeEnroll = true;
                  resetCode();
                  display.clearDisplay();
                  display.setTextSize(1);
                  display.setTextColor(WHITE);
                  displayCenteredText("SmartSafe Mastermode", 5);
                  displayCenteredText("Enter master code", 20);
                  displayCenteredText("to enroll finger", 35);
                  display.display();
                  while(mastercodeEnroll == true){
                    handleMasterPasscodeEnroll();
                  }
                    break;

                  case 'B': //Reset passcode
                  mastercodeReset = true;
                  resetCode();
                  display.clearDisplay();
                  display.setTextSize(1);
                  display.setTextColor(WHITE);
                  displayCenteredText("SmartSafe Mastermode", 5);
                  displayCenteredText("Enter master code", 20);
                  displayCenteredText("to reset passcode", 35);
                  display.display();
                    while(mastercodeReset == true){
                      handleMasterPasscodeReset();
                    }
                    break;

                  default: // Enter digits
                    if (inputIndex < PASSCODE_LENGTH) {
                      enteredCode[inputIndex] = keypad.key[i].kchar;
                      inputIndex++;
                      updateOLEDDisplay();
                    } else {
                      display.clearDisplay();
                      display.setTextSize(1);
                      display.setTextColor(WHITE);
                      displayCenteredText("SmartSafe", 5);
                      displayCenteredText("Too many digits", 20);
                      displayCenteredText("entered", 35);
                      display.display();
                      delay(1000);
                      resetCode();
                      homeScreenDisplay();
                    break;
                }
                break;
            }
          }
        }
      }
    }
    fingerprintEntry();
  }

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////

// Verify entered fingerprint
uint8_t fingerprintEntry() {
  uint8_t p = finger.getImage();
  if (p != FINGERPRINT_OK) return p;

  p = finger.image2Tz();
  if (p != FINGERPRINT_OK) return p;

  p = finger.fingerSearch();
  if (p == FINGERPRINT_OK) {
    // Code matched - Access Granted
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe", 5);
    displayCenteredText("ACCESS", 20);
    displayCenteredText("GRANTED" ,35);
    display.display();

    //Send Email if Access Attempt is correct
    sendEmail(readEEPROM(), "Smart Safe Access Attempt", "Hello Safe User, \n\nWe wanted to notify you that your safe was accessed. Please review and confirm this activity to ensure it was authorized. You may check the timestamp on this email for the exact time of access. If this was an unauthorized attempt, we recommend securing the safe and taking extra precautions. \n\nThank you, \nSmart Safe");
    Serial.println("Sending safe accessed email...");

    analogWrite(PIN_GREEN, 250);
    analogWrite(buzzerPin, 100);
    delay(1000);
    analogWrite(PIN_GREEN, 0);
    analogWrite(buzzerPin, 0);

    energizeLock();
    delay(2000);
    deenergizeLock();

    homeScreenDisplay();

  } else if (p == FINGERPRINT_NOTFOUND) {

    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe", 5);
    displayCenteredText("ACCESS", 20);
    displayCenteredText("DENIED" ,35);
    displayCenteredText("Not Valid Finger" ,55);
    display.display();

    analogWrite(PIN_RED, 250);
    analogWrite(buzzerPin, 100);
    delay(1000);
    analogWrite(buzzerPin, 0);
    analogWrite(PIN_RED, 0);

    //Still in Lockdown Mode
    if(inLockdownMode == true){
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe", 5);
        display.setTextSize(1);
        displayCenteredText("LOCKDOWN", 20);
        displayCenteredText("ACTIVATED", 35);
        displayCenteredText("Use fingerprint", 50);
        display.display();
      
      Serial.println("Still in Lockdown Mode");
    } else {
      homeScreenDisplay();
    }
  }
  return p;
}

/////////////////////////////// SEND EMAIL/EMAIL SETUP ////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////

void handleMasterPasscodeEnroll() { 
    if (keypad.getKeys()) {
        for (int i = 0; i < LIST_MAX; i++) {
            if (keypad.key[i].stateChanged && keypad.key[i].kstate == PRESSED) {  
                char key = keypad.key[i].kchar;

                // Sound buzzer once per key press
                analogWrite(buzzerPin, 100);
                delay(200);
                analogWrite(buzzerPin, 0);

                // Reset Code
                if (key == '*') {
                    resetCode();
                    updateMasterDisplay();
                }

                else if (key == 'D') {
                      display.clearDisplay();
                      display.setTextSize(1);
                      display.setTextColor(WHITE);
                      displayCenteredText("Returning", 20);
                      displayCenteredText("to Home Screen...", 35);
                      display.display();
                      delay(1000);
                      homeScreenDisplay();
                      mastercodeEnroll = false;
                      return;
                    }

                // Check Master Code
                else if (key == '#') {
                    if (compareCodes(enteredCode, masterCode)) {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Mastermode", 5);
                        displayCenteredText("Master Code", 20);
                        displayCenteredText("Approved", 35);
                        display.display();

                        analogWrite(PIN_GREEN, 250);
                        analogWrite(buzzerPin, 100);
                        delay(1000);
                        analogWrite(PIN_GREEN, 0);
                        analogWrite(buzzerPin, 0);

                        resetCode();
                        
                        enrollFinger = true;
                        while (enrollFinger == true){
                        getFingerID();
                        }
                    } else {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Mastermode", 5);
                        displayCenteredText("Master Code", 20);
                        displayCenteredText("Denied", 35);
                        display.display();

                        analogWrite(PIN_RED, 250);
                        analogWrite(buzzerPin, 100);
                        delay(1000);
                        analogWrite(PIN_RED, 0);
                        analogWrite(buzzerPin, 0);

                        resetCode(); 
                        homeScreenDisplay();
                        mastercodeEnroll = false;
                    }
                } 
                // Enter Digits for Master Code
                else {
                    if (inputIndex < PASSCODE_LENGTH) {
                        enteredCode[inputIndex] = key;
                        inputIndex++;
                        updateMasterDisplay();
                    } else {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Mastermode", 5);
                        displayCenteredText("Too many digits", 20);
                        displayCenteredText("entered", 35);
                        display.display();

                        resetCode();
                        delay(1000);

                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Mastermode", 5);
                        displayCenteredText("Enter master code", 20);
                        displayCenteredText("to enroll finger", 35);
                        display.display();
                    }
                }
            }
        }
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

int getFingerID() {
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe FingerID", 5);
    displayCenteredText("Enter finger ID", 20);
    displayCenteredText("(1 - 127)", 35);
    display.display();

    char idCode[4] = {0};  // Holds up to 3 digits + null terminator

    while (true) {  // Loop until valid input is received
        if (keypad.getKeys()) {
            for (int i = 0; i < LIST_MAX; i++) {
                if (keypad.key[i].stateChanged && keypad.key[i].kstate == PRESSED) {  
                    char key = keypad.key[i].kchar;

                    // Sound buzzer on key press
                    analogWrite(buzzerPin, 100);
                    delay(200);
                    analogWrite(buzzerPin, 0);

                    if (key == '*') {  // Reset input
                        memset(idCode, 0, sizeof(idCode));  // Clear the array
                        inputIndex = 0;
                        updateFingerIDDisplay();
                    }
                    else if (key == 'D') {
                      display.clearDisplay();
                      display.setTextSize(1);
                      display.setTextColor(WHITE);
                      displayCenteredText("Returning", 20);
                      displayCenteredText("to Home Screen...", 35);
                      display.display();
                      delay(1000);
                      enrollFinger = false;
                      mastercodeEnroll = false;
                      homeScreenDisplay();
                      return -1;
                    }
                    else if (key == '#') {  // Submit input
                        if (inputIndex == 0) continue;  // Ignore empty input
                        
                        idCode[inputIndex] = '\0';  // Null-terminate the string
                        int fingerID = atoi(idCode);  // Convert char array to integer

                        if (fingerID >= 1 && fingerID <= 127) {
                            display.clearDisplay();
                            display.setTextSize(1);
                            display.setTextColor(WHITE);
                            displayCenteredText("SmartSafe FingerID", 5);
                            displayCenteredText("Valid ID", 20);
                            displayCenteredText("entered", 35);
                            display.display();
                            delay(2000);
                            enrollFingerprint();
                            display.clearDisplay();
                            display.setTextSize(1);
                            display.setTextColor(WHITE);
                            displayCenteredText("SmartSafe Enroll Mode", 5);
                            displayCenteredText("Enrollment Done", 20);
                            display.display();
                            delay(1000);
                            display.clearDisplay();
                            display.setTextSize(1);
                            display.setTextColor(WHITE);
                            displayCenteredText("Returning", 20);
                            displayCenteredText("to Home Screen...", 35);
                            display.display();
                            delay(1000);
                            enrollFinger = false;
                            mastercodeEnroll = false;
                            homeScreenDisplay();
                            return -1;
                        } else {
                            display.clearDisplay();
                            display.setTextSize(1);
                            display.setTextColor(WHITE);
                            displayCenteredText("SmartSafe FingerID", 5);
                            displayCenteredText("Invalid ID", 20);
                            displayCenteredText("Try Again", 35);
                            display.display();
                            delay(2000);

                            memset(idCode, 0, sizeof(idCode));  // Clear invalid input
                            resetCode();
                            display.clearDisplay();
                            display.setTextSize(1);
                            display.setTextColor(WHITE);
                            displayCenteredText("SmartSafe FingerID", 5);
                            displayCenteredText("Enter finger ID", 20);
                            displayCenteredText("(1 - 127)", 35);
                            display.display();
                        }
                    }
                    else if (isdigit(key) && inputIndex < 3) {  // Allow up to 3-digit input
                        idCode[inputIndex] = key;
                        inputIndex++;
                        updateFingerIDDisplay();
                    } else {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe FingerID", 5);
                        displayCenteredText("Too many digits", 20);
                        displayCenteredText("entered", 35);
                        display.display();

                        memset(idCode, 0, sizeof(idCode));  
                        inputIndex = 0;
                        delay(2000);

                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe FingerID", 5);
                        displayCenteredText("Enter finger ID", 20);
                        displayCenteredText("(1 - 127)", 35);
                        display.display();
                    }
                }
            }
        }
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

uint8_t enrollFingerprint() {
    int p = -1;
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe Enroll Mode", 5);
    displayCenteredText("Place finger on", 20);
    displayCenteredText("scanner", 35);
    display.display();
    delay(2000);
    
    while (p != FINGERPRINT_OK) {
        p = finger.getImage();
        switch (p) {
            case FINGERPRINT_OK:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Image Taken", 20);
                displayCenteredText("Scan 1/2 Completed", 35);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_NOFINGER:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Waiting for finger...", 20);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_PACKETRECIEVEERR:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Communication Error", 20);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_IMAGEFAIL:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Imaging Error", 20);
                display.display();
                delay(1000);
                break;
            default:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Unknown Error", 20);
                display.display();
                delay(1000);
                break;
        }
    }

    // OK success!
    p = finger.image2Tz(1);
    switch (p) {
        case FINGERPRINT_OK:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Image Converted", 20);
            display.display();
            delay(1000);
            break;
        case FINGERPRINT_IMAGEMESS:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Image Too Messy", 20);
            display.display();
            delay(1000);
            return p;
        case FINGERPRINT_PACKETRECIEVEERR:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Communication Error", 20);
            display.display();
            delay(1000);
            return p;
        case FINGERPRINT_FEATUREFAIL:
        case FINGERPRINT_INVALIDIMAGE:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Unidenfiable Scan", 20);
            display.display();
            delay(1000);
            return p;
        default:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Unknown Error", 20);
            display.display();
            delay(1000);
            return p;
    }

    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe Enroll Mode", 5);
    displayCenteredText("Remove Finger", 20);
    display.display();
    delay(2000);
    p = 0;
    while (p != FINGERPRINT_NOFINGER) {
        p = finger.getImage();
    }

    p = -1;
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe Enroll Mode", 5);
    displayCenteredText("Place same finger", 20);
    displayCenteredText("on scanner", 35);
    display.display();
    delay(2000);
    
    while (p != FINGERPRINT_OK) {
        p = finger.getImage();
        switch (p) {
            case FINGERPRINT_OK:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Image Taken", 20);
                displayCenteredText("Scan 2/2 Completed", 35);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_NOFINGER:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Waiting for finger...", 20);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_PACKETRECIEVEERR:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Communication Error", 20);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_IMAGEFAIL:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Imaging Error", 20);
                display.display();
                delay(1000);
                break;
            default:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Unknown Error", 20);
                display.display();
                delay(1000);
                break;
        }
    }

    // OK success!
    p = finger.image2Tz(2);
    switch (p) {
        case FINGERPRINT_OK:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Image Converted", 20);
            display.display();
            delay(1000);
            break;
        case FINGERPRINT_PACKETRECIEVEERR:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Communication Error", 20);
            display.display();
            delay(1000);
            return p;
        case FINGERPRINT_FEATUREFAIL:
        case FINGERPRINT_INVALIDIMAGE:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Unidenfiable Scan", 20);
            display.display();
            delay(1000);
            return p;
        default:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Unknown Error", 20);
            display.display();
            delay(1000);
            return p;
    }

    // OK converted!
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe Enroll Mode", 5);
    displayCenteredText("Fingerprint", 20);
    displayCenteredText("Converted", 35);
    display.display();
    delay(1000);
    
    p = finger.createModel();
    if (p == FINGERPRINT_OK) {
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe Enroll Mode", 5);
        displayCenteredText("Fingerprints", 20);
        displayCenteredText("Matched", 35);
        display.display();
        delay(1000);
    } else {
        switch (p) {
          case FINGERPRINT_PACKETRECIEVEERR:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Communication Error", 20);
            display.display();
            delay(1000);
            return p;
          case FINGERPRINT_ENROLLMISMATCH:
            display.clearDisplay();
            display.setTextSize(1);
            display.setTextColor(WHITE);
            displayCenteredText("SmartSafe Enroll Mode", 5);
            displayCenteredText("Fingerprints Not", 20);
            displayCenteredText("Matched", 35);
            display.display();
            delay(1000);
            return p;
          default:
            return p;
        }
      }

    p = finger.storeModel(fingerID);
    if (p == FINGERPRINT_OK) {
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe Enroll Mode", 5);
        displayCenteredText("Fingerprint", 20);
        displayCenteredText("Stored", 35);
        display.display();
        delay(1000);
    } else {
        switch (p) {
            case FINGERPRINT_PACKETRECIEVEERR:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Communication Error", 20);
                displayCenteredText("after being stored", 35);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_BADLOCATION:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Bad Location To", 20);
                displayCenteredText("Store", 35);
                display.display();
                delay(1000);
                break;
            case FINGERPRINT_FLASHERR:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Flash Error", 20);
                display.display();
                delay(1000);
                break;
            default:
                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);
                displayCenteredText("SmartSafe Enroll Mode", 5);
                displayCenteredText("Unknown Error", 20);
                display.display();
                delay(1000);
                break;
        }
      return p;
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

void handleMasterPasscodeReset() { 
    if (keypad.getKeys()) {
        for (int i = 0; i < LIST_MAX; i++) {
            if (keypad.key[i].stateChanged && keypad.key[i].kstate == PRESSED) {
                char key = keypad.key[i].kchar;

                // Sound buzzer once per key press
                analogWrite(buzzerPin, 100);
                delay(200);
                analogWrite(buzzerPin, 0);

                // Reset Code
                if (key == '*') {
                    resetCode();
                    updateMasterDisplay();
                }

                else if (key == 'D') {
                      display.clearDisplay();
                      display.setTextSize(1);
                      display.setTextColor(WHITE);
                      displayCenteredText("Returning", 20);
                      displayCenteredText("to Home Screen...", 35);
                      display.display();
                      delay(1000);
                      homeScreenDisplay();
                      mastercodeReset = false;
                      return;
                    }

                // Check Master Code
                else if (key == '#') {
                  if (compareCodes(enteredCode, masterCode)) {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Mastercode", 5);
                        displayCenteredText("Master Code", 20);
                        displayCenteredText("Approved", 35);
                        display.display();

                        analogWrite(PIN_GREEN, 250);
                        analogWrite(buzzerPin, 100);
                        delay(1000);
                        analogWrite(PIN_GREEN, 0);
                        analogWrite(buzzerPin, 0);

                        resetCode();
                        
                        resetPasscode = true;
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Resetmode", 5);
                        displayCenteredText("Enter new", 20);
                        displayCenteredText("passcode", 35);
                        display.display();
                        while (resetPasscode == true){
                          setNewPasscode();
                        }
                  } else {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Mastermode", 5);
                        displayCenteredText("Master Code", 20);
                        displayCenteredText("Denied", 35);
                        display.display();

                        analogWrite(PIN_RED, 250);
                        analogWrite(buzzerPin, 100);
                        delay(1000);
                        analogWrite(PIN_RED, 0);
                        analogWrite(buzzerPin, 0);

                        resetCode(); 
                        homeScreenDisplay();
                        mastercodeReset = false;
                    }
                }
                // Enter Digits for Master Code
                else {
                    if (inputIndex < PASSCODE_LENGTH) {
                        enteredCode[inputIndex] = key;
                        inputIndex++;
                        updateMasterDisplay();
                    } else {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Mastermode", 5);
                        displayCenteredText("Too many digits", 20);
                        displayCenteredText("entered", 35);
                        display.display();

                        resetCode();
                        delay(2000);

                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Mastermode", 5);
                        displayCenteredText("Enter master code", 20);
                        displayCenteredText("to reset passcode", 35);
                        display.display();
                    }
                }
            }
        }
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

void setNewPasscode() {
    if (keypad.getKeys()) {
        for (int i = 0; i < LIST_MAX; i++) {
            if (keypad.key[i].stateChanged && keypad.key[i].kstate == PRESSED) {  
                char key = keypad.key[i].kchar;

                // Sound buzzer once per key press
                analogWrite(buzzerPin, 100);
                delay(200);
                analogWrite(buzzerPin, 0);

                // Reset Code
                if (key == '*') {
                    resetCode();
                    updateResetDisplay();
                } 

                else if (key == 'D') {
                      display.clearDisplay();
                      display.setTextSize(1);
                      display.setTextColor(WHITE);
                      displayCenteredText("Returning", 20);
                      displayCenteredText("to Home Screen...", 35);
                      display.display();
                      delay(1000);
                      homeScreenDisplay();
                      mastercodeReset = false;
                      resetPasscode = false;
                      return;
                    }

                // Submit Passcode
                else if (key == '#') {
                    if (inputIndex == PASSCODE_LENGTH) {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Resetmode", 5);
                        displayCenteredText("Password", 20);
                        displayCenteredText("Reset", 35);
                        display.display();
                        
                        analogWrite(PIN_GREEN, 250);
                        analogWrite(buzzerPin, 100);
                        delay(1000);
                        analogWrite(PIN_GREEN, 0);
                        analogWrite(buzzerPin, 0);

                        savePasscode(enteredCode);

                        delay(500);

                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Resetmode", 5);
                        displayCenteredText("Password", 20);
                        displayCenteredText("Saved", 35);
                        display.display();

                        analogWrite(PIN_GREEN, 250);
                        analogWrite(buzzerPin, 100);
                        delay(1000);
                        analogWrite(PIN_GREEN, 0);
                        analogWrite(buzzerPin, 0);
                        resetCode();
                        resetPasscode = false;
                        mastercodeReset = false;
                        homeScreenDisplay();
                    } else {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Resetmode", 5);
                        displayCenteredText("Not enough digits", 20);
                        displayCenteredText("Try Again", 35);
                        display.display();

                        resetCode();
                        delay(2000);

                        updateResetDisplay();
                    }
                } 
                // Enter Digits for Passcode
                else {
                    if (inputIndex < PASSCODE_LENGTH) {
                        enteredCode[inputIndex] = key;
                        inputIndex++;
                        updateResetDisplay();
                    } else {
                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Resetmode", 5);
                        displayCenteredText("Too many digits", 20);
                        displayCenteredText("entered", 35);
                        display.display();

                        resetCode();
                        delay(2000);

                        display.clearDisplay();
                        display.setTextSize(1);
                        display.setTextColor(WHITE);
                        displayCenteredText("SmartSafe Resetmode", 5);
                        displayCenteredText("Enter new", 20);
                        displayCenteredText("passcode", 35);
                        display.display();
                    }
                }
                break; // Stop checking once a valid key is handled
            }
        }
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

void savePasscode(char newPasscode[]) {
    for (int i = 0; i < PASSCODE_LENGTH; i++) {
        EEPROM.write(i, newPasscode[i]);
        correctCode[i] = newPasscode[i];  
    }
    EEPROM.commit();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

void loadPasscode() {
    for (int i = 0; i < PASSCODE_LENGTH; i++) {
        correctCode[i] = EEPROM.read(i);
    }

    if (correctCode[0] == 0xFF) {
        char defaultPass[6] = {'1', '2', '3', '4', '5', '6'};
        savePasscode(defaultPass);
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

void resetCode() {
  for (int i = 0; i < PASSCODE_LENGTH; i++) {
    enteredCode[i] = ' ';
    enteredCode[i] = '\0';
  }
  inputIndex = 0;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

bool compareCodes(char entered[], char stored[]) {
    for (int i = 0; i < PASSCODE_LENGTH; i++) {
        if (entered[i] != stored[i]) {
            return false;
        }
    }
    return true;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

void checkEnteredCode() {
  if (compareCodes(enteredCode, correctCode)) {
    // Code matched - Access Granted
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe", 5);
    display.setTextSize(1);
    displayCenteredText("ACCESS", 20);
    displayCenteredText("GRANTED" ,35);
    display.display();

    analogWrite(PIN_GREEN, 250);
    analogWrite(buzzerPin, 100);
    delay(1000);
    analogWrite(PIN_GREEN, 0);
    analogWrite(buzzerPin, 0);

    deenergizeLock();
    delay(2000);
    energizeLock();

    attempts = 0;
    resetCode();

    homeScreenDisplay();

  } else {
    // Code did not match - Access Denied
    attempts++;
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    displayCenteredText("SmartSafe", 5);
    display.setTextSize(1);
    displayCenteredText("ACCESS", 20);
    displayCenteredText("DENIED" ,35);

    // Display "X" symbols horizontally for each failed attempt
    display.setTextSize(1);
    int startX = 40; // Start position for the first "X"
    int yPosition = 50; // Fixed y position for all "X"s

    for (int i = 0; i < attempts; i++) {
      display.setCursor(startX + (i * 10), yPosition); // Move right for each "X"
      display.print("X");
    }

    display.display();

    analogWrite(PIN_RED, 250);
    analogWrite(buzzerPin, 100);
    delay(1000);
    analogWrite(buzzerPin, 0);
    analogWrite(PIN_RED, 0);
    
    if(attempts != 4){
      resetCode();
      updateOLEDDisplay();
    }
  }

  if(attempts == 4){
        resetCode();
        inLockdownMode = true;
        disableUntil = millis() + disableDuration;

        analogWrite(buzzerPin, 250); // Set to HIGH to make the buzzer sound
        analogWrite(PIN_RED, 250); //red on
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe", 5);
        display.setTextSize(1);
        displayCenteredText("LOCKDOWN", 20);
        displayCenteredText("ACTIVATED" ,35);
        display.display();

        delay(500); // red off
        analogWrite(PIN_RED, 0);
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe", 5);
        display.display();

        delay(500); // red on
        analogWrite(PIN_RED, 250);
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe", 5);
        displayCenteredText("LOCKDOWN", 20);
        displayCenteredText("ACTIVATED" ,35);
        display.display();

        delay(500); // red off
        analogWrite(PIN_RED, 0);
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe", 5);
        display.display();

        delay(500); // red on
        analogWrite(PIN_RED, 250);
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe", 5);
        displayCenteredText("LOCKDOWN", 20);
        displayCenteredText("ACTIVATED" ,35);
        display.display();

        delay(500); // red off
        analogWrite(PIN_RED, 0);
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe", 5);
        display.display();

        delay(500); // red on
        analogWrite(PIN_RED, 250);
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe", 5);
        displayCenteredText("LOCKDOWN", 20);
        displayCenteredText("ACTIVATED" ,35);
        display.display();

        delay(500); // red off
        analogWrite(PIN_RED, 0);
        analogWrite(buzzerPin, 0); // LOW to turn off the buzzer
        attempts=0;

        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(WHITE);
        displayCenteredText("SmartSafe", 5);
        displayCenteredText("LOCKDOWN", 20);
        displayCenteredText("ACTIVATED", 35);
        displayCenteredText("Use Fingerprint", 50);
        display.display();
        delay(1000);
        //Send Email about Lockdown Mode
        sendEmail(readEEPROM(), "High Alert: Safe Lockdown Mode Activated", "Hello Safe User, \n\nThis is a high-priority alert to inform you that your safe has entered Lockdown Mode. Lockdown Mode is activated after multiple failed access attempts, and no further access will be allowed until a registered user disengages it using their fingerprint. \n\nThank you, \nSmart Safe");
        Serial.println("Sending email about lockdown mode...");
      }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////// WEBSITE + EEPROM ///////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////

//Unlocks door
void energizeLock(){ //unlock door
  digitalWrite(RELAY_PIN, LOW);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

//Locks door
void deenergizeLock(){ //lock door
  digitalWrite(RELAY_PIN, HIGH);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

// Function that displays centered text
void displayCenteredText(const char* text, int y) {
  int16_t x1, y1;
  uint16_t w, h;
  
  display.getTextBounds(text, 0, y, &x1, &y1, &w, &h); // Get text dimensions
  
  int x = (SCREEN_WIDTH - w) / 2; // Center text horizontally

  display.setCursor(x, y);
  display.print(text);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

// Update OLED Display based on code
void updateOLEDDisplay() {
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  displayCenteredText("SmartSafe", 5);
  display.setCursor(30, 25);
  
  // Show "*" for each entered digit
  for (int i = 0; i < inputIndex; i++) {
    display.print("* ");
  }
  display.display();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

// Update OLED Display based on code
void updateMasterDisplay() {
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  displayCenteredText("SmartSafe Mastermode", 5);
  display.setCursor(30, 25);
  
  // Show "*" for each entered digit
  for (int i = 0; i < inputIndex; i++) {
    display.print("* ");
  }
  display.display();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

// Update OLED Display based on code
void updateResetDisplay() {
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  displayCenteredText("SmartSafe Resetmode", 5);
  display.setCursor(30, 25);
  
  // Show "*" for each entered digit
  for (int i = 0; i < inputIndex; i++) {
    display.print("* ");
  }
  display.display();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

// Update OLED Display based on code
void updateFingerIDDisplay() {
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  displayCenteredText("SmartSafe FingerID", 5);
  display.setTextSize(2);
  display.setCursor(30, 25);
  
  // Show "*" for each entered digit
  for (int i = 0; i < inputIndex; i++) {
    display.print("* ");
  }
  display.display();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

//Home screen
void homeScreenDisplay() {
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  displayCenteredText("SmartSafe", 5);
  displayCenteredText("Enter passcode", 20);
  displayCenteredText("or", 35);
  displayCenteredText("use fingerprint", 50);
  display.display();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
